{
	"id": "53288de23eda526ac3ed75feb2a70470",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Will.sol": {
				"content": " // SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n \r\ncontract Will {\r\n    address owner;\r\n    uint fortune;\r\n    bool deceased;\r\n    constructor() payable public {\r\n        owner = msg.sender;\r\n        fortune = msg.value;\r\n        deceased = false;\r\n    } \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Will.sol": {
				"Will": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Will.sol\":76:283  contract Will {\r... */\n  mstore(0x40, 0x80)\n    /* \"Will.sol\":204:214  msg.sender */\n  caller\n    /* \"Will.sol\":196:201  owner */\n  0x00\n  dup1\n    /* \"Will.sol\":196:214  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Will.sol\":235:244  msg.value */\n  callvalue\n    /* \"Will.sol\":225:232  fortune */\n  0x01\n    /* \"Will.sol\":225:244  fortune = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Will.sol\":266:271  false */\n  0x00\n    /* \"Will.sol\":255:263  deceased */\n  0x02\n  0x00\n    /* \"Will.sol\":255:271  deceased = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Will.sol\":76:283  contract Will {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Will.sol\":76:283  contract Will {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200f09d031eb67ce70b767a0bfe042f4c5b84fe402f05c1686dce939eead8a12c464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506000600260006101000a81548160ff021916908315150217905550603f8060736000396000f3fe6080604052600080fdfea26469706673582212200f09d031eb67ce70b767a0bfe042f4c5b84fe402f05c1686dce939eead8a12c464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x73 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF MULMOD 0xD0 BALANCE 0xEB PUSH8 0xCE70B767A0BFE042 DELEGATECALL 0xC5 0xB8 0x4F 0xE4 MUL CREATE 0x5C AND DUP7 0xDC 0xE9 CODECOPY 0xEE 0xAD DUP11 SLT 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "76:207:0:-:0;;;204:10;196:5;;:18;;;;;;;;;;;;;;;;;;235:9;225:7;:19;;;;266:5;255:8;;:16;;;;;;;;;;;;;;;;;;76:207;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212200f09d031eb67ce70b767a0bfe042f4c5b84fe402f05c1686dce939eead8a12c464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF MULMOD 0xD0 BALANCE 0xEB PUSH8 0xCE70B767A0BFE042 DELEGATECALL 0xC5 0xB8 0x4F 0xE4 MUL CREATE 0x5C AND DUP7 0xDC 0xE9 CODECOPY 0xEE 0xAD DUP11 SLT 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "76:207:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "70688",
								"totalCost": "83288"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 76,
									"end": 283,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 76,
									"end": 283,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 76,
									"end": 283,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 204,
									"end": 214,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 196,
									"end": 201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 201,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 196,
									"end": 214,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 196,
									"end": 214,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 196,
									"end": 214,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 196,
									"end": 214,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 235,
									"end": 244,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 225,
									"end": 232,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 225,
									"end": 244,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 225,
									"end": 244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 225,
									"end": 244,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 225,
									"end": 244,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 266,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 255,
									"end": 271,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 255,
									"end": 271,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 255,
									"end": 271,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 76,
									"end": 283,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 76,
									"end": 283,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 76,
									"end": 283,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 76,
									"end": 283,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 76,
									"end": 283,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 76,
									"end": 283,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 76,
									"end": 283,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f09d031eb67ce70b767a0bfe042f4c5b84fe402f05c1686dce939eead8a12c464736f6c63430008070033",
									".code": [
										{
											"begin": 76,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 76,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76,
											"end": 283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76,
											"end": 283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76,
											"end": 283,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Will.sol\":\"Will\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Will.sol\":{\"keccak256\":\"0xadb0999d617210ad7b08712fbaef3ae7d0dded94277ae34c34d99a6e757e38f1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://961c28a14dc17c327e53e5d58dffbfc403bf349c58d54ea712ff02cfbd1e9193\",\"dweb:/ipfs/QmRkjyAvwR9QnkszxDdzhPzguU1fX34SizcQaryyEYThT8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> Will.sol:9:5:\n  |\n9 |     constructor() payable public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 279,
					"file": "Will.sol",
					"start": 156
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Will.sol": {
				"ast": {
					"absolutePath": "Will.sol",
					"exportedSymbols": {
						"Will": [
							26
						]
					},
					"id": 27,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "Will",
							"nameLocation": "85:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "105:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 26,
									"src": "97:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "97:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "fortune",
									"nameLocation": "122:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 26,
									"src": "117:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "117:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "deceased",
									"nameLocation": "141:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 26,
									"src": "136:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 6,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "136:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "185:94:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "196:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "204:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "204:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "196:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "196:18:0"
											},
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "fortune",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 16,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "235:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "235:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "225:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "225:19:0"
											},
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "deceased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "255:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "266:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "255:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "255:16:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:0:0"
									},
									"scope": 26,
									"src": "156:123:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 27,
							"src": "76:207:0",
							"usedErrors": []
						}
					],
					"src": "40:243:0"
				},
				"id": 0
			}
		}
	}
}